{"ts":1377702728744,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class DrawingsController < ApplicationController\n  # GET /drawings\n  # GET /drawings.json\n  def index\n    @drawings = Drawing.all\n\n    respond_to do |format|\n      format.html # index.html.erb\n      format.json { render json: @drawings }\n    end\n  end\n\n  # GET /drawings/1\n  # GET /drawings/1.json\n  def show\n    @drawing = Drawing.find(params[:id])\n\n    respond_to do |format|\n      format.html # show.html.erb\n      format.json { render json: @drawing }\n    end\n  end\n\n  # GET /drawings/new\n  # GET /drawings/new.json\n  def new\n    @drawing = Drawing.new\n\n    respond_to do |format|\n      format.html # new.html.erb\n      format.json { render json: @drawing }\n    end\n  end\n\n  # GET /drawings/1/edit\n  def edit\n    @drawing = Drawing.find(params[:id])\n  end\n\n  # POST /drawings\n  # POST /drawings.json\n  def create\n    @drawing = Drawing.new(params[:drawing])\n\n    respond_to do |format|\n      if @drawing.save\n        format.html { redirect_to @drawing, notice: 'Drawing was successfully created.' }\n        format.json { render json: @drawing, status: :created, location: @drawing }\n      else\n        format.html { render action: \"new\" }\n        format.json { render json: @drawing.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PUT /drawings/1\n  # PUT /drawings/1.json\n  def update\n    @drawing = Drawing.find(params[:id])\n\n    respond_to do |format|\n      if @drawing.update_attributes(params[:drawing])\n        format.html { redirect_to @drawing, notice: 'Drawing was successfully updated.' }\n        format.json { head :no_content }\n      else\n        format.html { render action: \"edit\" }\n        format.json { render json: @drawing.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /drawings/1\n  # DELETE /drawings/1.json\n  def destroy\n    @drawing = Drawing.find(params[:id])\n    @drawing.destroy\n\n    respond_to do |format|\n      format.html { redirect_to drawings_url }\n      format.json { head :no_content }\n    end\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1989}]],"length":1989}
{"contributors":[],"silentsave":false,"ts":1377715506322,"patch":[[{"diffs":[[0,"   @"],[-1,"drawings = Drawing"],[1,"search = Drawing.search(params[:search])\n    @drawings = @search"],[0,".all"]],"start1":103,"start2":103,"length1":26,"length2":72}]],"length":2035,"saved":false}
{"ts":1377715992744,"patch":[[{"diffs":[[0,"g.search"],[1,"logic"],[0,"(params["]],"start1":122,"start2":122,"length1":16,"length2":21}]],"length":2040,"saved":false}
{"ts":1377716816996,"patch":[[{"diffs":[[0,"   @"],[-1,"search = Drawing.searchlogic(params[:search])\n    @drawings = @search"],[1,"drawings = Drawing"],[0,".all"]],"start1":103,"start2":103,"length1":77,"length2":26}]],"length":1989,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377723926237,"patch":[[{"diffs":[[0,"   @"],[-1,"drawings = Drawing.all"],[1,"search = Drawing.search(params[:q])\n    @drawings = @search.result"],[0,"\n\n  "]],"start1":103,"start2":103,"length1":30,"length2":74}]],"length":2033,"saved":false}
{"ts":1377724107785,"patch":[[{"diffs":[[0,"h.result"],[1,"\n    @search.build_condition"],[0,"\n\n    re"]],"start1":165,"start2":165,"length1":16,"length2":44}]],"length":2061,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377803339934,"patch":[[{"diffs":[[0,"dex\n"],[1,"\n"],[0,"    @"],[-1,"search = Drawing.search(params[:q])\n    @drawings = @search.result\n    @search.build_condition"],[1,"drawings = Drawing.all"],[0,"\n\n  "]],"start1":98,"start2":98,"length1":107,"length2":36}]],"length":1990,"saved":false}
